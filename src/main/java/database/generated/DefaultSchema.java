/*
 * This file is generated by jOOQ.
*/
package database.generated;


import database.generated.tables.Account;
import database.generated.tables.Cities;
import database.generated.tables.Countries;
import database.generated.tables.SqliteSequence;
import database.generated.tables.States;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Catalog;
import org.jooq.Table;
import org.jooq.impl.SchemaImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DefaultSchema extends SchemaImpl {

    private static final long serialVersionUID = 970989684;

    /**
     * The reference instance of <code></code>
     */
    public static final DefaultSchema DEFAULT_SCHEMA = new DefaultSchema();

    /**
     * The table <code>Account</code>.
     */
    public final Account ACCOUNT = database.generated.tables.Account.ACCOUNT;

    /**
     * The table <code>cities</code>.
     */
    public final Cities CITIES = database.generated.tables.Cities.CITIES;

    /**
     * The table <code>countries</code>.
     */
    public final Countries COUNTRIES = database.generated.tables.Countries.COUNTRIES;

    /**
     * The table <code>sqlite_sequence</code>.
     */
    public final SqliteSequence SQLITE_SEQUENCE = database.generated.tables.SqliteSequence.SQLITE_SEQUENCE;

    /**
     * The table <code>states</code>.
     */
    public final States STATES = database.generated.tables.States.STATES;

    /**
     * No further instances allowed
     */
    private DefaultSchema() {
        super("", null);
    }


    /**
     * {@inheritDoc}
     */
    @Override
    public Catalog getCatalog() {
        return DefaultCatalog.DEFAULT_CATALOG;
    }

    @Override
    public final List<Table<?>> getTables() {
        List result = new ArrayList();
        result.addAll(getTables0());
        return result;
    }

    private final List<Table<?>> getTables0() {
        return Arrays.<Table<?>>asList(
            Account.ACCOUNT,
            Cities.CITIES,
            Countries.COUNTRIES,
            SqliteSequence.SQLITE_SEQUENCE,
            States.STATES);
    }
}
