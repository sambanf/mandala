/*
 * This file is generated by jOOQ.
*/
package database.generated;


import database.generated.tables.Account;
import database.generated.tables.Cities;
import database.generated.tables.Countries;
import database.generated.tables.States;
import database.generated.tables.records.AccountRecord;
import database.generated.tables.records.CitiesRecord;
import database.generated.tables.records.CountriesRecord;
import database.generated.tables.records.StatesRecord;

import javax.annotation.Generated;

import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.UniqueKey;
import org.jooq.impl.AbstractKeys;


/**
 * A class modelling foreign key relationships and constraints of tables of 
 * the <code></code> schema.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------

    public static final Identity<CitiesRecord, Integer> IDENTITY_CITIES = Identities0.IDENTITY_CITIES;
    public static final Identity<CountriesRecord, Integer> IDENTITY_COUNTRIES = Identities0.IDENTITY_COUNTRIES;
    public static final Identity<StatesRecord, Integer> IDENTITY_STATES = Identities0.IDENTITY_STATES;

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<AccountRecord> PK_ACCOUNT = UniqueKeys0.PK_ACCOUNT;
    public static final UniqueKey<CitiesRecord> PK_CITIES = UniqueKeys0.PK_CITIES;
    public static final UniqueKey<CountriesRecord> PK_COUNTRIES = UniqueKeys0.PK_COUNTRIES;
    public static final UniqueKey<StatesRecord> PK_STATES = UniqueKeys0.PK_STATES;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<AccountRecord, StatesRecord> FK_ACCOUNT_STATES_1 = ForeignKeys0.FK_ACCOUNT_STATES_1;
    public static final ForeignKey<AccountRecord, CountriesRecord> FK_ACCOUNT_COUNTRIES_1 = ForeignKeys0.FK_ACCOUNT_COUNTRIES_1;
    public static final ForeignKey<AccountRecord, CitiesRecord> FK_ACCOUNT_CITIES_1 = ForeignKeys0.FK_ACCOUNT_CITIES_1;

    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Identities0 extends AbstractKeys {
        public static Identity<CitiesRecord, Integer> IDENTITY_CITIES = createIdentity(Cities.CITIES, Cities.CITIES.ID);
        public static Identity<CountriesRecord, Integer> IDENTITY_COUNTRIES = createIdentity(Countries.COUNTRIES, Countries.COUNTRIES.ID);
        public static Identity<StatesRecord, Integer> IDENTITY_STATES = createIdentity(States.STATES, States.STATES.ID);
    }

    private static class UniqueKeys0 extends AbstractKeys {
        public static final UniqueKey<AccountRecord> PK_ACCOUNT = createUniqueKey(Account.ACCOUNT, "pk_Account", Account.ACCOUNT.ID);
        public static final UniqueKey<CitiesRecord> PK_CITIES = createUniqueKey(Cities.CITIES, "pk_cities", Cities.CITIES.ID);
        public static final UniqueKey<CountriesRecord> PK_COUNTRIES = createUniqueKey(Countries.COUNTRIES, "pk_countries", Countries.COUNTRIES.ID);
        public static final UniqueKey<StatesRecord> PK_STATES = createUniqueKey(States.STATES, "pk_states", States.STATES.ID);
    }

    private static class ForeignKeys0 extends AbstractKeys {
        public static final ForeignKey<AccountRecord, StatesRecord> FK_ACCOUNT_STATES_1 = createForeignKey(database.generated.Keys.PK_STATES, Account.ACCOUNT, "fk_Account_states_1", Account.ACCOUNT.STATE_ID);
        public static final ForeignKey<AccountRecord, CountriesRecord> FK_ACCOUNT_COUNTRIES_1 = createForeignKey(database.generated.Keys.PK_COUNTRIES, Account.ACCOUNT, "fk_Account_countries_1", Account.ACCOUNT.COUNTRY_ID);
        public static final ForeignKey<AccountRecord, CitiesRecord> FK_ACCOUNT_CITIES_1 = createForeignKey(database.generated.Keys.PK_CITIES, Account.ACCOUNT, "fk_Account_cities_1", Account.ACCOUNT.CITY_ID);
    }
}
